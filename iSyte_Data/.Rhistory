library(dplyr)
library(openxlsx)
wd<-getwd()
outDir<-paste(wd,'DiffExp', sep="/")
iSyte<-paste(wd, 'iSyte_Data', sep="/")
# Import data tables
setwd(outDir)
degDataFiles<-list.files(pattern="expressedTags-all.txt$")
# Function that converts short names to descriptive filenames
descName<-function(x){
x<-gsub('WT_0_Hour', 'Wildtype-0-Hour', x)
x<-gsub('WT_48_Hour', 'Wildtype-48-Hour', x)
x<-gsub('FN_0_Hour', 'FNcKO-0-Hour', x)
x<-gsub('FN_48_Hour', 'FNcKO-48-Hour', x)
}
ss_master<-data.frame(stringsAsFactors = F)
for (dataFile in degDataFiles){
contrast<-gsub("_expressedTags-all.txt$","", dataFile)
# Load in DEGs
dg<-read.table(dataFile, sep="\t", quote="", header=T, stringsAsFactors = F)
samples<-names(dg)[grep("_GeneCount.cpm", names(dg))]
print(paste("############ FILTER DEG: ",contrast, "##########"))
# Add Columns for Filtering based on statistical Criteria
print(paste("CPM Present Cols:", paste(samples, collapse=" "), sep= " "))
dg$Cpm.Present<-apply(dg[, samples],
1, function(x) sum(x > 1) >=2
)
# Setup for RPKM Filtering Criteria
samples<-gsub("_GeneCount.cpm", "_RPKM", samples)
print(paste("RPKM Filtering Cols:", paste(samples, collapse=" "), sep=" "))
dg$Avg1<-apply(dg[,samples[1:3]], 1, mean)
dg$Avg2<-apply(dg[,samples[4:6]], 1, mean)
dg$Group_1<-unlist(strsplit(contrast,"_vs_"))[1]
dg$Group_2<-unlist(strsplit(contrast,"_vs_"))[2]
#names(dg)[grep("^Avg", names(dg))]<-paste(unlist(strsplit(contrast,"_vs_")), "_Average_RPKM", sep="")
dg$RPKM_gt2_Either_Cond<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) (x[1] > 2) |(x[2] > 2) )
dg$RPKM_Diff_gt2<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) abs(x[1]-x[2]) > 2)
# Get Statistically Significant Genes
ds<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05) # & Cpm.Present == T) -- CPM Filter already applied
# Get Biologically significant genes based on the following criteria
db<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05 & RPKM_gt2_Either_Cond == T & RPKM_Diff_gt2 == T)
# Reorder Columns For readability, drop sample specific columns
cols<-c("GeneID",
"ensembl_gene_id",
"description",
"FC", "logFC",
"FDR", "Group_1",
"Group_2", "Avg1", "Avg2"
)
ss_master<-bind_rows(
ss_master,
ds<-ds[,cols]
)
}
# Validate GeneID as primary key for each contrast (NOT FOR GLOBAL TABLE)
print("########## Confirm Unique Gene IDs in each Contrast (Stat)#########")
for( i in unique(ss_master$Group_1)){
for(j in unique(ss_master$Group_2)){
val<-ss_master %>% filter(Group_1 ==i, Group_2==j)
if(nrow(val) > 0){
print(
paste(i,j,
"Rows:", nrow(val),
"Unique_Genes:", length(unique(val$GeneID))
)
)
}
}
}
# Partition the complete list of unique Genes into blocks of 500
ugl=unique(ss_master$GeneID)
psize<-500
nparts<-1+(length(ugl) %/% psize)
partitions=list()
for( i in 1:nparts){
g=(1+(i-1)*psize):(i*psize)
g<-g[g<=length(ugl)]
partitions[[i]]<-ugl[g]
}
# Write Partitions to columns in a spreadsheet, manually retrieve data for each partition
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="TEXT")
addStyle(wb, i, rows=1:psize, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
# Import and process data from each partition
setwd(iSyte)
p<-read.table("1_iSyTE_FoldChange.txt")
p
p<-read.table("1_iSyTE_FoldChange.txt", header=T)
p
levels(p$DevE10.5affy430)
library(reshape2)
q<-melt(p)
head(q)
q<-melt(p, id.vars = "Symbol")
head(q)
p<-read.table("1_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
head(q)
levels(q$variable)
class(q$variable)
class(q$value)
class(q$variable)
labels(q$variable)
levels(q$variable)
as.character(q$variable)
nrow(q)
head(p)
p$Rank
q$variable<-as.character(q$variable)
class(q$variable)
head(q$variable)
q$variable
length(q$variable)
length(q$variable[grepl("Rank", q$variable)])
length(q$variable[grepl("Dev", q$variable)])
length(q$variable[grepl("Dev", q$variable)]) +449
setwd(iSyte)
p<-read.table("1_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
q$variable<-gsub("Dev","",as.character(q$variable))
q$variable
levels(q$variable)
unique(q$variable)
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"E10.5", "E11.5", "E12.5", "E16.5", "E17.5", "E19.5", "P0", "P0a", "P0b",
"P2", "P4", "P8", "P12", "P20", "P30", "P42", "P52", "P56", "P28Epi", "P60"
)
paste(platforms, intervals, sep="")
paste(intervals, platforms, sep="")
check<-expand.grid(intervals, platforms)
check
check$var3<-paste(check$Var1, check$Var2, sep='')
check
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"E9.5", "E10.5", "E11.5", "E12.5",
"E16.5", "E17.5", "E19.5", "P0", "P0a",
"P0b", "P2", "P4", "P8", "P12", "P20",
"P30", "P42", "P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"E9.5", "E10.5", "E11.5", "E12.5", "",
"E16.5", "E17.5", "E19.5", "P0", "P0a",
"P0b", "P2", "P4", "P8", "P12", "P20",
"P30", "P42", "P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"", "E9.5", "E9.5a", "E9.5b","E10.25", "E10.5",
"E10.5b", "E11.5", "E12.5", "E15.5", "E16.5",
"E17.5", "E19.5", "P0", "P0a", "P0b", "P2", "P4",
"P8", "P12", "P20", "P30", "P42", "P52", "P56",
"P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
# Import and process data from each partition
setwd(iSyte)
p<-read.table("1_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
q$variable<-gsub("Dev","",as.character(q$variable))
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"", "E9.5", "E9.5a", "E9.5b","E10.25", "E10.5",
"E10.5a", "E10.5b", "E11.5", "E12.5", "E15.5",
"E16.5", "E17.5", "E19.5", "P0", "P0a", "P0b",
"P2", "P4", "P8", "P12", "P20", "P30", "P42",
"P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
setwd(iSyte)
p<-read.table("2_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
q$variable<-gsub("Dev","",as.character(q$variable))
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"", "E9.5", "E9.5a", "E9.5b","E10.25", "E10.5",
"E10.5a", "E10.5b", "E11.5", "E12.5", "E15.5",
"E16.5", "E17.5", "E19.5", "P0", "P0a", "P0b",
"P2", "P4", "P8", "P12", "P20", "P30", "P42",
"P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
setwd(iSyte)
p<-read.table("3_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
q$variable<-gsub("Dev","",as.character(q$variable))
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"", "E9.5", "E9.5a", "E9.5b","E10.25", "E10.5",
"E10.5a", "E10.5b", "E11.5", "E12.5", "E15.5",
"E16.5", "E17.5", "E19.5", "P0", "P0a", "P0b",
"P2", "P4", "P8", "P12", "P20", "P30", "P42",
"P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
# Import and process data from each partition
setwd(iSyte)
p<-read.table("4_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
q$variable<-gsub("Dev","",as.character(q$variable))
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"", "E9.5", "E9.5a", "E9.5b","E10.25", "E10.5",
"E10.5a", "E10.5b", "E11.5", "E12.5", "E15.5",
"E16.5", "E17.5", "E19.5", "P0", "P0a", "P0b",
"P2", "P4", "P8", "P12", "P20", "P30", "P42",
"P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
setwd(iSyte)
p<-read.table("5_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
q$variable<-gsub("Dev","",as.character(q$variable))
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"", "E9.5", "E9.5a", "E9.5b","E10.25", "E10.5",
"E10.5a", "E10.5b", "E11.5", "E12.5", "E15.5",
"E16.5", "E17.5", "E19.5", "P0", "P0a", "P0b",
"P2", "P4", "P8", "P12", "P20", "P30", "P42",
"P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
setwd(iSyte)
p<-read.table("6_iSyTE_FoldChange.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
q$variable<-gsub("Dev","",as.character(q$variable))
platforms <-c('affy430', 'affy430a', 'lumi1', 'lumi2', 'Rank')
intervals <-c(
"", "E9.5", "E9.5a", "E9.5b","E10.25", "E10.5",
"E10.5a", "E10.5b", "E11.5", "E12.5", "E15.5",
"E16.5", "E17.5", "E19.5", "P0", "P0a", "P0b",
"P2", "P4", "P8", "P12", "P20", "P30", "P42",
"P52", "P56", "P28Epi", "P60"
)
check<-expand.grid(intervals, platforms)
check$var3<-paste(check$Var1, check$Var2, sep='')
setdiff(q$variable, check$var3)
check
q
q[q$variable !='Rank']
q[q$variable !='Rank',]
gsub('affy430', '', gsub('affy430a', '', gsub('lumi1', '', gsub('lumi2', '', q$variable ))))
x<-gsub('affy430', '', gsub('affy430a', '', gsub('lumi1', '', gsub('lumi2', '', q$variable ))))
unique(x)
apply(q[,c('variable', 'Interval')], 1, function(x)gsub(x[1], '', x[2]))
apply(q[,c('variable', 'Interval')], 1, function(x) gsub(x[1], '', x[2]))
head(q)
q$Interval<-gsub(
'affy430', '', gsub(
'affy430a', '', gsub(
'lumi1', '', gsub(
'lumi2', '',
q$variable
)
)
)
)
head(q)
apply(q[,c('variable', 'Interval')], 1, function(x) gsub(x[1], '', x[2]))
apply(q[,c('variable', 'Interval')], 1, function(x) gsub(x[2], '', x[1]))
q$Interval<-gsub(
'affy430', '', gsub(
'affy430a', '', gsub(
'lumi1', '', gsub(
'lumi2', '',
q$variable
)
)
)
)
################################################################################
q$platform<-apply(
q[,c('variable', 'Interval')], 1,
function(x)gsub(x[2], '', x[1])
)
head(q)
length(intervals)
length(unique(q$Interval))
p<-read.table("6_iSyTE_Pvalue.txt", header=T, stringsAsFactors = F)
q<-melt(p, id.vars = "Symbol")
# Strip "Dev" tag out of melted column headers
q$variable<-gsub("Dev","",as.character(q$variable))
# Strip the platform outy of melted headers to get the time interval
q$Interval<-gsub(
'affy430', '', gsub(
'affy430a', '', gsub(
'lumi1', '', gsub(
'lumi2', '',
q$variable
)
)
)
)
################################################################################
q$platform<-apply(
q[,c('variable', 'Interval')], 1,
function(x)gsub(x[2], '', x[1])
)
head(q)
iSyteCleaner<-function(x, type="Pvalue"){
q<-melt(x, id.vars = "Symbol")
# Strip "Dev" tag out of melted column headers
q$variable<-gsub("Dev","",as.character(q$variable))
# Strip the platform outy of melted headers to get the time interval
q$Interval<-gsub(
'affy430', '', gsub(
'affy430a', '', gsub(
'lumi1', '', gsub(
'lumi2', '',
q$variable
)
)
)
)
q$platform<-apply(
q[,c('variable', 'Interval')], 1,
function(x)gsub(x[2], '', x[1])
)
q<-q[,c('Symbol', 'Platform', 'Interval', 'value')]
names(q)[grep('value', names(q))] <-type
q
}
head(p)
q<-iSyteCleaner(p)
iSyteCleaner<-function(x, type="Pvalue"){
q<-melt(x, id.vars = "Symbol")
# Strip "Dev" tag out of melted column headers
q$variable<-gsub("Dev","",as.character(q$variable))
# Strip the platform outy of melted headers to get the time interval
q$Interval<-gsub(
'affy430', '', gsub(
'affy430a', '', gsub(
'lumi1', '', gsub(
'lumi2', '',
q$variable
)
)
)
)
q$Platform<-apply(
q[,c('variable', 'Interval')], 1,
function(x)gsub(x[2], '', x[1])
)
q<-q[,c('Symbol', 'Platform', 'Interval', 'value')]
names(q)[grep('value', names(q))] <-type
q
}
q<-iSyteCleaner(p)
head(q)
