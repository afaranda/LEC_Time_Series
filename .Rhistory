degDataFiles<-list.files(pattern="expressedTags-all.txt$")
# Function that converts short names to descriptive filenames
descName<-function(x){
x<-gsub('WT_0_Hour', 'Wildtype-0-Hour', x)
x<-gsub('WT_48_Hour', 'Wildtype-48-Hour', x)
x<-gsub('FN_0_Hour', 'FNcKO-0-Hour', x)
x<-gsub('FN_48_Hour', 'FNcKO-48-Hour', x)
}
ss_master<-data.frame(stringsAsFactors = F)
for (dataFile in degDataFiles){
contrast<-gsub("_expressedTags-all.txt$","", dataFile)
# Load in DEGs
dg<-read.table(dataFile, sep="\t", quote="", header=T, stringsAsFactors = F)
samples<-names(dg)[grep("_GeneCount.cpm", names(dg))]
print(paste("############ FILTER DEG: ",contrast, "##########"))
# Add Columns for Filtering based on statistical Criteria
print(paste("CPM Present Cols:", paste(samples, collapse=" "), sep= " "))
dg$Cpm.Present<-apply(dg[, samples],
1, function(x) sum(x > 1) >=2
)
# Setup for RPKM Filtering Criteria
samples<-gsub("_GeneCount.cpm", "_RPKM", samples)
print(paste("RPKM Filtering Cols:", paste(samples, collapse=" "), sep=" "))
dg$Avg1<-apply(dg[,samples[1:3]], 1, mean)
dg$Avg2<-apply(dg[,samples[4:6]], 1, mean)
dg$Group_1<-unlist(strsplit(contrast,"_vs_"))[1]
dg$Group_2<-unlist(strsplit(contrast,"_vs_"))[2]
#names(dg)[grep("^Avg", names(dg))]<-paste(unlist(strsplit(contrast,"_vs_")), "_Average_RPKM", sep="")
dg$RPKM_gt2_Either_Cond<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) (x[1] > 2) |(x[2] > 2) )
dg$RPKM_Diff_gt2<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) abs(x[1]-x[2]) > 2)
# Get Statistically Significant Genes
ds<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05) # & Cpm.Present == T) -- CPM Filter already applied
# Get Biologically significant genes based on the following criteria
db<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05 & RPKM_gt2_Either_Cond == T & RPKM_Diff_gt2 == T)
# Reorder Columns For readability, drop sample specific columns
cols<-c("GeneID",
"ensembl_gene_id",
"description",
"FC", "logFC",
"FDR", "Group_1",
"Group_2", "Avg1", "Avg2"
)
ss_master<-bind_rows(
ss_master,
ds<-ds[,cols]
)
}
# Validate GeneID as primary key for each contrast (NOT FOR GLOBAL TABLE)
print("########## Confirm Unique Gene IDs in each Contrast (Stat)#########")
for( i in unique(ss_master$Group_1)){
for(j in unique(ss_master$Group_2)){
val<-ss_master %>% filter(Group_1 ==i, Group_2==j)
if(nrow(val) > 0){
print(
paste(i,j,
"Rows:", nrow(val),
"Unique_Genes:", length(unique(val$GeneID))
)
)
}
}
}
# Partition the complete list of unique Genes into blocks of 500
ugl=unique(ss_master$GeneID)
psize<-500
nparts<-1+(length(ugl) %/% psize)
partitions=list()
for( i in 1:nparts){
g=(1+(i-1)*psize):(i*psize)
g<-g[g<=length(ugl)]
partitions[[i]]<-ugl[g]
}
# Write Partitions to columns in a spreadsheet, manually retrieve data for each partition
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="TEXT")
addStyle(wb, i, rows=1:psize, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
# Import and process data from each partition
setwd(iSyteDir)
p<-read.table("6_iSyTE_Pvalue.txt", header=T, stringsAsFactors = F)
iSyteCleaner<-function(x, type="Pvalue"){
q<-melt(x, id.vars = "Symbol")
# Strip "Dev" tag out of melted column headers
q$variable<-gsub("Dev","",as.character(q$variable))
q$variable<-gsub(".PVal.", "", q$variable)
# Strip the platform outy of melted headers to get the time interval
q$Interval<-gsub(
'affy430', '', gsub(
'affy430a', '', gsub(
'lumi1', '', gsub(
'lumi2', '',
q$variable
)
)
)
)
q$Platform<-apply(
q[,c('variable', 'Interval')], 1,
function(x)gsub(x[2], '', x[1])
)
q<-q[,c('Symbol', 'Platform', 'Interval', 'value')]
names(q)[grep('value', names(q))] <-type
q
}
fc<-data.frame()
for(i in list.files(pattern="FoldChange")){
p<-read.table(i, header=T, stringsAsFactors = F)
q<-iSyteCleaner(p, type = "FoldChange")
fc<-bind_rows(fc, q)
}
pv<-data.frame()
for(i in list.files(pattern="Pvalue")){
p<-read.table(i, header=T, stringsAsFactors = F)
q<-iSyteCleaner(p, type = "Pvalue")
pv<-bind_rows(pv, q)
}
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
head(iSyte)
wd
setwd('/home/adam/Documents/LEC_Time_Series/')
library(dplyr)
library(reshape2)
library(openxlsx)
wd<-getwd()
outDir<-paste(wd,'DiffExp', sep="/")
iSyteDir<-paste(wd, 'iSyte_Data', sep="/")
# Import data tables
setwd(outDir)
degDataFiles<-list.files(pattern="expressedTags-all.txt$")
descName<-function(x){
x<-gsub('WT_0_Hour', 'Wildtype-0-Hour', x)
x<-gsub('WT_48_Hour', 'Wildtype-48-Hour', x)
x<-gsub('FN_0_Hour', 'FNcKO-0-Hour', x)
x<-gsub('FN_48_Hour', 'FNcKO-48-Hour', x)
}
ss_master<-data.frame(stringsAsFactors = F)
for (dataFile in degDataFiles){
contrast<-gsub("_expressedTags-all.txt$","", dataFile)
# Load in DEGs
dg<-read.table(dataFile, sep="\t", quote="", header=T, stringsAsFactors = F)
samples<-names(dg)[grep("_GeneCount.cpm", names(dg))]
print(paste("############ FILTER DEG: ",contrast, "##########"))
# Add Columns for Filtering based on statistical Criteria
print(paste("CPM Present Cols:", paste(samples, collapse=" "), sep= " "))
dg$Cpm.Present<-apply(dg[, samples],
1, function(x) sum(x > 1) >=2
)
# Setup for RPKM Filtering Criteria
samples<-gsub("_GeneCount.cpm", "_RPKM", samples)
print(paste("RPKM Filtering Cols:", paste(samples, collapse=" "), sep=" "))
dg$Avg1<-apply(dg[,samples[1:3]], 1, mean)
dg$Avg2<-apply(dg[,samples[4:6]], 1, mean)
dg$Group_1<-unlist(strsplit(contrast,"_vs_"))[1]
dg$Group_2<-unlist(strsplit(contrast,"_vs_"))[2]
#names(dg)[grep("^Avg", names(dg))]<-paste(unlist(strsplit(contrast,"_vs_")), "_Average_RPKM", sep="")
dg$RPKM_gt2_Either_Cond<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) (x[1] > 2) |(x[2] > 2) )
dg$RPKM_Diff_gt2<-apply(dg[,grep("^Avg", names(dg))], 1, function(x) abs(x[1]-x[2]) > 2)
# Get Statistically Significant Genes
ds<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05) # & Cpm.Present == T) -- CPM Filter already applied
# Get Biologically significant genes based on the following criteria
db<-dg %>% filter(abs(logFC) > 1 & FDR < 0.05 & RPKM_gt2_Either_Cond == T & RPKM_Diff_gt2 == T)
# Reorder Columns For readability, drop sample specific columns
cols<-c("GeneID",
"ensembl_gene_id",
"description",
"FC", "logFC",
"FDR", "Group_1",
"Group_2", "Avg1", "Avg2"
)
ss_master<-bind_rows(
ss_master,
ds<-ds[,cols]
)
}
print("########## Confirm Unique Gene IDs in each Contrast (Stat)#########")
for( i in unique(ss_master$Group_1)){
for(j in unique(ss_master$Group_2)){
val<-ss_master %>% filter(Group_1 ==i, Group_2==j)
if(nrow(val) > 0){
print(
paste(i,j,
"Rows:", nrow(val),
"Unique_Genes:", length(unique(val$GeneID))
)
)
}
}
}
# Partition the complete list of unique Genes into blocks of 500
ugl=unique(ss_master$GeneID)
psize<-500
nparts<-1+(length(ugl) %/% psize)
partitions=list()
for( i in 1:nparts){
g=(1+(i-1)*psize):(i*psize)
g<-g[g<=length(ugl)]
partitions[[i]]<-ugl[g]
}
# Write Partitions to columns in a spreadsheet, manually retrieve data for each partition
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="TEXT")
addStyle(wb, i, rows=1:psize, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
addStyle(wb, 1, rows=1:psize, cols=cells$col, style=tx)
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
ugl=unique(ss_master$GeneID)
psize<-500
nparts<-1+(length(ugl) %/% psize)
partitions=list()
for( i in 1:nparts){
g=(1+(i-1)*psize):(i*psize)
g<-g[g<=length(ugl)]
partitions[[i]]<-ugl[g]
}
# Write Partitions to columns in a spreadsheet, manually retrieve data for each partition
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="TEXT")
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
partitions
tx<-createStyle(numFmt="GENERAL")
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
cells
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="GENERAL")
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="GENERAL")
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
wb
wb
wb$styles
wb$core
wb$worksheets
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
partitions
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
saveWorkbook(wb, fn, overwrite =T )
setwd(iSyteDir)
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="GENERAL")
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
setwd(iSyteDir)
fn<-"iSyte_GeneLists.xlsx"
wb<-createWorkbook()
addWorksheet(wb,"GeneLists")
cells<-expand.grid(row=1:psize, col=1:nparts)
tx<-createStyle(numFmt="TEXT")
addStyle(wb, 1, rows=cells$row, cols=cells$col, style=tx)
for(i in 1:length(partitions)){
writeData(wb,1,partitions[[i]], i,1)
}
saveWorkbook(wb, fn, overwrite =T )
setwd(wd)
getwd()
rm(list=ls())
source('~/Documents/LEC_Time_Series/iSyte_Gene_List_Retrieval_Processing.R')
nrow(iSyte)
source('~/Documents/LEC_Time_Series/iSyte_Gene_List_Retrieval_Processing.R')
iSyte
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-") %>%
filter(Pvalue == '-')
iSyte
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-") %>%
filter(Pvalue == '')
iSyte
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-") %>%
filter(Pvalue == ' ')
iSyte
unique(iSyte$Pvalue)
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-")
unique(iSyte$Pvalue)
length(unique(iSyte$Pvalue)))
length(unique(iSyte$Pvalue))
length(unique(iSyte$FoldChange))
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte
iSyte %>% filter(Symbol == "Myo1g")
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-")
iSyte %>% filter(Symbol == "Myo1g")
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-")
iSyte$Pvalue<-as.numeric(iSyte$Pvalue)
iSyte$FoldChange<-as.numeric(iSyte$FoldChange)
iSyte %>% filter(Symbol == "Myo1g")
head(ss_master)
nrow(ss_master)
nrow(inner_join(ss_master, iSyte %>% filter(Interval == "P0", Platform == "affy430")))
nrow(inner_join(ss_master, iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=C("GeneID" == "Symbol")))
nrow(inner_join(ss_master, iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" == "Symbol")))
nrow(inner_join(ss_master, iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol")))
x=inner_join(ss_master, iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol")))
x=inner_join(ss_master, iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
x
plot(x$logFC, x$FoldChange)
plot(x$logFC, log(x$FoldChange, s))
plot(x$logFC, log(x$FoldChange, 2))
plot(x$logFC, log(x$FoldChange, 2))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>filter(Group_1 == WT_0_Hour, Group_2 == WT_48_Hour), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
x=inner_join(ss_master%>%filter(Group_1 == WT_0_Hour, Group_2 == WT_48_Hour), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
x=inner_join(ss_master%>%filter(Group_1 == 'WT_0_Hour', Group_2 == 'WT_48_Hour'), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
plot(x$logFC, x$FoldChange)
plot(x$logFC, x$FoldChange)
nrow(x)
plot(x$logFC, x$FoldChange)
plot(x$logFC, x$FoldChange)
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == 'FN_0_Hour', Group_2 == 'FN_48_Hour'), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
nrow(x)
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == WT_48_Hour, Group_2 == FN_48_Hour), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
x=inner_join(ss_master%>%filter(Group_1 == "WT_48_Hour", Group_2 == "FN_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
plot(x$logFC, log(x$FoldChange, s))
plot(x$logFC, x$FoldChange)
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_48_Hour", Group_2 == "FN_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "FN_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
nrow(x)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430"), by=c("GeneID" = "Symbol"))
nrow(x)
plot(x$logFC, x$FoldChange)
plot(x$logFC, log(x$FoldChange))
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05), by=c("GeneID" = "Symbol"))
plot(x$logFC, log(x$FoldChange))
plot(x$logFC, log(x$FoldChange))
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 1), by=c("GeneID" = "Symbol"))
plot(x$logFC, log(x$FoldChange))
plot(x$logFC, log(x$FoldChange))
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 10), by=c("GeneID" = "Symbol"))
plot(x$logFC, log(x$FoldChange))
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 2), by=c("GeneID" = "Symbol"))
plot(x$logFC, log(x$FoldChange))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 20), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_48_Hour", Group_2 == "FN_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_48_Hour", Group_2 == "FN_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 10), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P2", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P52", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P56", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P56", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 10), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P56", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 20), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P56", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
plot(x$FC, x$FoldChange)
plot(x$logFC, log(x$FoldChange,2))
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P56", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, log(x$FoldChange,2))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P60", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P40", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P20", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "E9.5", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "E9.5a", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "E19.5a", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "E19.5", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P0", Platform == "affy430", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P60", Platform == lumi1", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P60", Platform == "lumi2", Pvalue<0.05, abs(FoldChange) > 30), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P60", Platform == "lumi2", Pvalue<0.05, abs(FoldChange) > 20), by=c("GeneID" = "Symbol"))
plot(x$logFC, x$FoldChange)
x=inner_join(ss_master%>%filter(Group_1 == "WT_0_Hour", Group_2 == "WT_48_Hour"), iSyte %>% filter(Interval == "P60", Platform == "lumi2", Pvalue<0.05, abs(FoldChange) > 20), by=c("GeneID" = "Symbol"))
head(x)
nrow(x)
length(unique(x))
length(unique(x$GeneID))
plot(x$FC, x$FoldChange)
log(-1)
log(1/2)
log(1/2,2)
log(1/2)
log(1/2,2)
logify<-function(x, base=2){
if(x > 0){
return (log(x, base))
}
else if( x < 0){
return( log( 1/abs(x), base ))
}
else {
return(0)
}
}
logify(1)
logify(2)
logify(0)
log2(0)
log2(0)
log(0,2)
log(1/0,2)
logify<-function(x, base=2){
if(x >= 0){
return (log(x, base))
}
else if( x < 0){
return( log( 1/abs(x), base ))
}
}
logify(0)
logify(0/1)
logify(-10)
logify(-2)
logify(2)
x
plot(x$FC, logify(x$FoldChange))
x$FoldChange
logify(x$FoldChange)
logify(-85)
logify(-81)
logify(x$FoldChange)
x$FoldChange
logify(23.59)
sapply(x$FoldChange, logify)
sapply(x$FoldChange, logify)
plot(x$FC, sapply(x$FoldChange, logify))
plot(x$logFC, sapply(x$FoldChange, logify))
iSyte<-inner_join(pv, fc, by=c('Symbol', 'Platform', 'Interval'))
iSyte<-iSyte %>%
filter(Platform != "" & Interval != "Rank" & FoldChange !="-")
iSyte$Pvalue<-as.numeric(iSyte$Pvalue)
iSyte$FoldChange<-sapply(as.numeric(iSyte$FoldChange), logify)
source('alignment_pipeline_scripts/BuildDataMatrix.R')
q()
